1-1
加入了-DNEG后，则定义了NEG，在ifdef的判断中M被宏定义为-4，则后续的a被赋值为-4，a = a * 4 -> a = -16
在sample.i文件中表现为int a = M;被替换成了int a = -4;

1-2
1)32位机中涉及运算都是用的l，表示32位机对应4字节的long，每个地址单元的地址间隔4；64位机中则位q，表示64位机对应8字节的quad，每个
地址单元的地址间隔8
2)32位机中需要将栈指针下移来分配空间，多了subl $16,%esp和movl %ebp,%esp；64位机则不用,应该是被优化掉了，毕竟不需要移动保存栈指>针的一系列操作

1-3
(clang的界面渲染好像略有问题，可能是educoder的原因，tab是红色的)
clang的块分的比gcc更有逻辑性，比如在je指令后直接跟了一个块，更为清晰
clang在块中对变量有保护机制，比如a是先移动到参数寄存器%eax计算后再取回
clang置零用的是xor，相较gcc略快